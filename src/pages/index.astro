---
import Layout from "../layouts/Layout.astro";

import LandingHeader from "../components/LandingHeader.astro";
import HeroSection from "../components/HeroSection.astro";
import Primera from "../components/Primera.astro";
import Segunda from "../components/Segunda.astro";
import Tercera from "../components/Tercera.astro";
---

<Layout title="Tesla">
	<LandingHeader />

	<main class="snap-y snap-mandatory relative w-full h-screen overflow-auto">
		<div class="snap-center">
			<HeroSection />
		</div>
		<div class="snap-center">
			<Primera />
		</div>
		<div class="snap-center">
			<Segunda />
		</div>
		<div class="snap-center">
			<Tercera />
		</div>
	</main>

	<script>
		const listItem = document.querySelectorAll("#landing-header li");
		const menuBackDrop = document.querySelector(
			"#menu-backdrop",
		) as HTMLElement;

		listItem.forEach((item) => {
			item.addEventListener("mouseenter", ({ target }) => {
				const { left, top, width, height } =
					target.getBoundingClientRect();
				menuBackDrop.style.setProperty("--left", `${left}px`);
				menuBackDrop.style.setProperty("--top", `${top}px`);
				menuBackDrop.style.setProperty("--width", `${width}px`);
				menuBackDrop.style.setProperty("--height", `${height}px`);
				menuBackDrop.style.opacity = "1"
				menuBackDrop.style.visibility = "visible"
			});
			item.addEventListener("mouseleave", () => {
				menuBackDrop.style.opacity = "0"
				menuBackDrop.style.visibility = "none"
			})
		});
	</script>

	<script>
		const header = document.querySelector("#landing-header") as HTMLElement;
		const observerOptions = {
			root: null,
			rootMargin: "0px",
			threshold: 0.5,
		};

		const observer = new IntersectionObserver((entries) => {
			entries.forEach((entry) => {
				const { isIntersecting } = entry;
				if (isIntersecting) {
					const color =
						entry.target.getAttribute("data-header-color");
					header.style.color = color;
				}
			});
		}, observerOptions);

		const sections = document.querySelectorAll(".landing-section");
		sections.forEach((section) => observer.observe(section));
	</script>
</Layout>
